"""Initial database schema

Revision ID: 51b22f3dfe1f
Revises: 
Create Date: 2025-09-26 21:06:42.942317

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '51b22f3dfe1f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('license', sa.String(length=100), nullable=True),
    sa.Column('folder_path', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasets_id'), 'datasets', ['id'], unique=False)
    op.create_index(op.f('ix_datasets_name'), 'datasets', ['name'], unique=True)
    op.create_table('extractors',
    sa.Column('extractor_type', sa.String(length=20), nullable=False),
    sa.Column('version', sa.String(length=30), nullable=True),
    sa.Column('author', sa.String(length=50), nullable=True),
    sa.Column('variant', sa.String(length=50), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('release_git_hash', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parser_name', sa.String(length=100), nullable=True),
    sa.Column('parser_version', sa.String(length=50), nullable=True),
    sa.Column('parser_git_hash', sa.String(length=64), nullable=True),
    sa.Column('parser_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parser_config_hash', sa.String(length=64), nullable=True),
    sa.Column('config_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('config_hash', sa.String(length=64), nullable=True),
    sa.Column('default_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('docker_image', sa.String(length=255), nullable=True),
    sa.Column('docker_tag', sa.String(length=100), nullable=True),
    sa.Column('docker_digest', sa.String(length=100), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('development_endpoint', sa.String(length=255), nullable=True),
    sa.Column('development_endpoint_enabled', sa.Boolean(), nullable=False),
    sa.Column('production_endpoint', sa.String(length=255), nullable=True),
    sa.Column('production_endpoint_enabled', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('extractor_type', 'version', 'variant', 'config_hash', 'parser_config_hash', name='_extractor_version_variant_config_uc')
    )
    op.create_index(op.f('ix_extractors_config_hash'), 'extractors', ['config_hash'], unique=False)
    op.create_index(op.f('ix_extractors_extractor_type'), 'extractors', ['extractor_type'], unique=False)
    op.create_index(op.f('ix_extractors_id'), 'extractors', ['id'], unique=False)
    op.create_index(op.f('ix_extractors_parser_config_hash'), 'extractors', ['parser_config_hash'], unique=False)
    op.create_table('papers',
    sa.Column('pdf_path', sa.String(length=500), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('pdf_hash', sa.String(length=64), nullable=True),
    sa.Column('pdf_actual_start_page', sa.Integer(), nullable=False),
    sa.Column('pdf_actual_last_page', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_papers_id'), 'papers', ['id'], unique=False)
    op.create_index(op.f('ix_papers_pdf_hash'), 'papers', ['pdf_hash'], unique=True)
    op.create_table('dataset_papers',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'paper_id')
    )
    op.create_table('extracts',
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.Column('extractor_id', sa.Integer(), nullable=False),
    sa.Column('extraction_date', sa.String(length=50), nullable=True),
    sa.Column('extracted_title', sa.Text(), nullable=True),
    sa.Column('extracted_doi', sa.String(length=255), nullable=True),
    sa.Column('extracted_authors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extracted_refs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extracted_xrefs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extracted_abstract', sa.Text(), nullable=True),
    sa.Column('extracted_keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['extractor_id'], ['extractors.id'], ),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extracts_extractor_id'), 'extracts', ['extractor_id'], unique=False)
    op.create_index(op.f('ix_extracts_id'), 'extracts', ['id'], unique=False)
    op.create_index(op.f('ix_extracts_paper_id'), 'extracts', ['paper_id'], unique=False)
    op.create_table('ground_truths',
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('doi', sa.String(length=255), nullable=True),
    sa.Column('authors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('refs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('xrefs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('abstract', sa.Text(), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ground_truths_id'), 'ground_truths', ['id'], unique=False)
    op.create_index(op.f('ix_ground_truths_paper_id'), 'ground_truths', ['paper_id'], unique=False)
    op.create_table('extractevals',
    sa.Column('extract_id', sa.Integer(), nullable=False),
    sa.Column('extractor_id', sa.Integer(), nullable=False),
    sa.Column('ground_truth_id', sa.Integer(), nullable=False),
    sa.Column('evaluation_date', sa.String(length=50), nullable=True),
    sa.Column('title_exact_match', sa.Boolean(), nullable=True),
    sa.Column('title_levenshtein_distance', sa.Integer(), nullable=True),
    sa.Column('title_semantic_similarity', sa.Float(), nullable=True),
    sa.Column('title_length_ratio', sa.Float(), nullable=True),
    sa.Column('doi_exact_match', sa.Boolean(), nullable=True),
    sa.Column('doi_is_valid', sa.Boolean(), nullable=True),
    sa.Column('abstract_rouge_l', sa.Float(), nullable=True),
    sa.Column('abstract_bert_score', sa.Float(), nullable=True),
    sa.Column('keywords_jaccard_index', sa.Float(), nullable=True),
    sa.Column('keywords_f1', sa.Float(), nullable=True),
    sa.Column('keywords_precision', sa.Float(), nullable=True),
    sa.Column('keywords_recall', sa.Float(), nullable=True),
    sa.Column('keywords_avg_jaro_winkler', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('evaluation_details', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['extract_id'], ['extracts.id'], ),
    sa.ForeignKeyConstraint(['extractor_id'], ['extractors.id'], ),
    sa.ForeignKeyConstraint(['ground_truth_id'], ['ground_truths.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extractevals_extract_id'), 'extractevals', ['extract_id'], unique=True)
    op.create_index(op.f('ix_extractevals_extractor_id'), 'extractevals', ['extractor_id'], unique=False)
    op.create_index(op.f('ix_extractevals_ground_truth_id'), 'extractevals', ['ground_truth_id'], unique=False)
    op.create_index(op.f('ix_extractevals_id'), 'extractevals', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_extractevals_id'), table_name='extractevals')
    op.drop_index(op.f('ix_extractevals_ground_truth_id'), table_name='extractevals')
    op.drop_index(op.f('ix_extractevals_extractor_id'), table_name='extractevals')
    op.drop_index(op.f('ix_extractevals_extract_id'), table_name='extractevals')
    op.drop_table('extractevals')
    op.drop_index(op.f('ix_ground_truths_paper_id'), table_name='ground_truths')
    op.drop_index(op.f('ix_ground_truths_id'), table_name='ground_truths')
    op.drop_table('ground_truths')
    op.drop_index(op.f('ix_extracts_paper_id'), table_name='extracts')
    op.drop_index(op.f('ix_extracts_id'), table_name='extracts')
    op.drop_index(op.f('ix_extracts_extractor_id'), table_name='extracts')
    op.drop_table('extracts')
    op.drop_table('dataset_papers')
    op.drop_index(op.f('ix_papers_pdf_hash'), table_name='papers')
    op.drop_index(op.f('ix_papers_id'), table_name='papers')
    op.drop_table('papers')
    op.drop_index(op.f('ix_extractors_parser_config_hash'), table_name='extractors')
    op.drop_index(op.f('ix_extractors_id'), table_name='extractors')
    op.drop_index(op.f('ix_extractors_extractor_type'), table_name='extractors')
    op.drop_index(op.f('ix_extractors_config_hash'), table_name='extractors')
    op.drop_table('extractors')
    op.drop_index(op.f('ix_datasets_name'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_id'), table_name='datasets')
    op.drop_table('datasets')
    # ### end Alembic commands ###
